/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gennis.servervnc;

import java.awt.Color;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author leand
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    public void setStatus(boolean isConectado) {

        if (isConectado) {
            status.setBackground(new java.awt.Color(51, 255, 0));
            // System.out.println("Online");
            // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Online");
        } else {
            status.setBackground(new java.awt.Color(255, 0, 51));
            // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Offline");
        }
        status.updateUI();
    }

    public void setStatusConect(boolean isConectado) {

        if (isConectado) {
            isKeepLB.setText("Online");
            System.out.println("Online");
            // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Online");
        } else {
            isKeepLB.setText("Offline");
            System.out.println("Offline");
            // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Offline");
        }
        isKeepLB.updateUI();
    }

    public void setMensage(String texto) {

        mensageLB.setText(texto);

        // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Online");
        mensageLB.updateUI();
    }

    public void setMensageConect(String texto) {

        keyConectLB.setText(texto);

        // TelaInstanceCliente.getClienteServidor().enviarMensagemServidor("Online");
        keyConectLB.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        status = new javax.swing.JPanel();
        scan = new javax.swing.JLabel();
        ping = new javax.swing.JLabel();
        arp = new javax.swing.JLabel();
        conect = new javax.swing.JLabel();
        mensageLB = new javax.swing.JLabel();
        keyConectLB = new javax.swing.JLabel();
        keyIDTX = new javax.swing.JTextField();
        mensageTX = new javax.swing.JTextField();
        isKeepLB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        status.setBackground(new java.awt.Color(255, 255, 255));

        scan.setBackground(new java.awt.Color(8, 22, 17));
        scan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        scan.setForeground(new java.awt.Color(255, 255, 255));
        scan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scan.setText("SCAN");
        scan.setOpaque(true);
        scan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                scanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                scanMouseExited(evt);
            }
        });

        ping.setBackground(new java.awt.Color(8, 22, 17));
        ping.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ping.setForeground(new java.awt.Color(255, 255, 255));
        ping.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ping.setText("PING");
        ping.setOpaque(true);
        ping.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pingMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pingMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pingMouseExited(evt);
            }
        });

        arp.setBackground(new java.awt.Color(8, 22, 17));
        arp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        arp.setForeground(new java.awt.Color(255, 255, 255));
        arp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        arp.setText("ARP -A");
        arp.setOpaque(true);
        arp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                arpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                arpMouseExited(evt);
            }
        });

        conect.setBackground(new java.awt.Color(8, 22, 17));
        conect.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        conect.setForeground(new java.awt.Color(255, 255, 255));
        conect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        conect.setText("CONECTAR");
        conect.setOpaque(true);
        conect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                conectMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                conectMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                conectMouseExited(evt);
            }
        });

        mensageLB.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        mensageLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mensageLB.setText("X");

        keyConectLB.setFont(new java.awt.Font("Stencil", 0, 14)); // NOI18N
        keyConectLB.setForeground(new java.awt.Color(51, 51, 51));
        keyConectLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        keyConectLB.setText("0");
        keyConectLB.setAlignmentX(9.0F);
        keyConectLB.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        keyIDTX.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        keyIDTX.setText("NOTE-BOOK");

        mensageTX.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        isKeepLB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        isKeepLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout statusLayout = new javax.swing.GroupLayout(status);
        status.setLayout(statusLayout);
        statusLayout.setHorizontalGroup(
            statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mensageLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(keyConectLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(statusLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mensageTX, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                    .addComponent(scan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(arp, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addGroup(statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ping, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(conect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(statusLayout.createSequentialGroup()
                        .addComponent(isKeepLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyIDTX, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );
        statusLayout.setVerticalGroup(
            statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(conect, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keyIDTX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isKeepLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(keyConectLB, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mensageLB, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mensageTX, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scan, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ping, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        jPanel1.add(status, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void scanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanMouseClicked

        System.out.println("Send ");
        TCP request = new TCP();
        request.setComandSend(true);
        request.setScan(true);

        TelaInstanceCliente.getClienteServidor().enviarMensagemServidor(request);

    }//GEN-LAST:event_scanMouseClicked

    private void pingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pingMouseClicked

        TCP request = new TCP();
        request.setComandSend(true);
        request.setPing(true);

        TelaInstanceCliente.getClienteServidor().enviarMensagemServidor(request);


    }//GEN-LAST:event_pingMouseClicked

    private void arpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arpMouseClicked

        TCP request = new TCP();
        request.setComandSend(true);
        request.setArp(true);

        TelaInstanceCliente.getClienteServidor().enviarMensagemServidor(request);

    }//GEN-LAST:event_arpMouseClicked

    private void conectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectMouseClicked

        TCP request = new TCP();
        request.setConect(true);
        request.setKeyID(keyIDTX.getText());

        TelaInstanceCliente.getClienteServidor().enviarMensagemServidor(request);
    }//GEN-LAST:event_conectMouseClicked

    private void arpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arpMouseEntered
        arp.setBackground(Color.BLUE);

    }//GEN-LAST:event_arpMouseEntered

    private void arpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arpMouseExited
        arp.setBackground(new java.awt.Color(8, 22, 17));
    }//GEN-LAST:event_arpMouseExited

    private void conectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectMouseEntered
        conect.setBackground(Color.BLUE);
    }//GEN-LAST:event_conectMouseEntered

    private void conectMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_conectMouseExited
        conect.setBackground(new java.awt.Color(8, 22, 17));
    }//GEN-LAST:event_conectMouseExited

    private void scanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanMouseEntered
        scan.setBackground(Color.BLUE);
    }//GEN-LAST:event_scanMouseEntered

    private void scanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scanMouseExited
        scan.setBackground(new java.awt.Color(8, 22, 17));
    }//GEN-LAST:event_scanMouseExited

    private void pingMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pingMouseEntered
        ping.setBackground(Color.BLUE);
    }//GEN-LAST:event_pingMouseEntered

    private void pingMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pingMouseExited
        ping.setBackground(new java.awt.Color(8, 22, 17));
    }//GEN-LAST:event_pingMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arp;
    private javax.swing.JLabel conect;
    private javax.swing.JLabel isKeepLB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel keyConectLB;
    private javax.swing.JTextField keyIDTX;
    private javax.swing.JLabel mensageLB;
    private javax.swing.JTextField mensageTX;
    private javax.swing.JLabel ping;
    private javax.swing.JLabel scan;
    private javax.swing.JPanel status;
    // End of variables declaration//GEN-END:variables
}
